{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherChart from './WeatherChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'YOUR_API_KEY'; // Replace with your actual API key\nconst CITY = 'Hyderabad';\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [historicalData, setHistoricalData] = useState([]);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const currentUrl = `https://api.openweathermap.org/data/2.5/weather?q=${CITY}&appid=${API_KEY}&units=metric`;\n        const res = await axios.get(currentUrl);\n        setCurrentWeather(res.data);\n        const lat = res.data.coord.lat;\n        const lon = res.data.coord.lon;\n        const now = Math.floor(Date.now() / 1000);\n        const timestamps = [];\n        for (let i = 1; i <= 5; i++) {\n          timestamps.push(now - i * 86400);\n        }\n        const history = await Promise.all(timestamps.map(ts => axios.get(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${ts}&appid=${API_KEY}&units=metric`)));\n        setHistoricalData(history.map(d => ({\n          date: new Date(d.data.current.dt * 1000).toLocaleDateString(),\n          temp: d.data.current.temp\n        })));\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n      }\n    };\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Weather App for \", CITY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", currentWeather.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Condition: \", currentWeather.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), historicalData.length > 0 && /*#__PURE__*/_jsxDEV(WeatherChart, {\n      data: historicalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U5eVrhot9JdGXaohGlE9CIoBFJM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherChart","jsxDEV","_jsxDEV","API_KEY","CITY","App","_s","currentWeather","setCurrentWeather","historicalData","setHistoricalData","fetchWeather","currentUrl","res","get","data","lat","coord","lon","now","Math","floor","Date","timestamps","i","push","history","Promise","all","map","ts","d","date","current","dt","toLocaleDateString","temp","error","console","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","main","weather","description","length","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherChart from './WeatherChart';\n\nconst API_KEY = 'YOUR_API_KEY'; // Replace with your actual API key\nconst CITY = 'Hyderabad';\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [historicalData, setHistoricalData] = useState([]);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const currentUrl = `https://api.openweathermap.org/data/2.5/weather?q=${CITY}&appid=${API_KEY}&units=metric`;\n        const res = await axios.get(currentUrl);\n        setCurrentWeather(res.data);\n\n        const lat = res.data.coord.lat;\n        const lon = res.data.coord.lon;\n        const now = Math.floor(Date.now() / 1000);\n\n        const timestamps = [];\n        for (let i = 1; i <= 5; i++) {\n          timestamps.push(now - i * 86400);\n        }\n\n        const history = await Promise.all(\n          timestamps.map(ts =>\n            axios.get(\n              `https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${ts}&appid=${API_KEY}&units=metric`\n            )\n          )\n        );\n\n        setHistoricalData(\n          history.map(d => ({\n            date: new Date(d.data.current.dt * 1000).toLocaleDateString(),\n            temp: d.data.current.temp\n          }))\n        );\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n      }\n    };\n\n    fetchWeather();\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ padding: 20 }}>\n      <h1>Weather App for {CITY}</h1>\n      {currentWeather && (\n        <div>\n          <h2>Current Weather</h2>\n          <p>Temperature: {currentWeather.main.temp} Â°C</p>\n          <p>Condition: {currentWeather.weather[0].description}</p>\n        </div>\n      )}\n      {historicalData.length > 0 && <WeatherChart data={historicalData} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}